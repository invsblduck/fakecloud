#!/bin/bash

. $(dirname $0)/virt.sh

function require() {
    # $1 how many args required
    if [ ${#ARGV[@]} -ne ${1} ]; then
	log "ERROR Missing arguments: expecting ${1}, got ${#ARGV[@]}"
	exec 1>&3
	usage
    fi
}

function usage() {
    echo -e "${prog} [command] [args]\n"
    echo "Valid commands:"
    echo "  create [name] [distrelease]"
    echo "  destroy [name]"
    echo "  list"
    echo "  reboot [name]"
    echo -e "\n"
    echo "Valid args:"
    echo "  -d           enable debug"
    echo "  -f [flavor]  create instance using flavor"
    echo "  -h [hints]   create using specified hints"

    trap - ERR EXIT
    exit 1
}

prog=$0

if [ $# -eq 0 ]; then
    usage
fi

while getopts "f:dp:h:" option; do
    case $option in
	h)
	    HINTS=${OPTARG}
	    ;;
	p)
	    POST_INSTALL=${OPTARG}
	    ;;
	d)
	    DEBUG=1
	    ;;
	f)
	    FLAVOR=${OPTARG}
	    ;;
	*)
	    usage
	    ;;
    esac
done

shift $(($OPTIND - 1))

init

# get positional arguments
action=${1}
shift

ARGV=("$@")

case $action in
    create)
	# overload this a bit.  if there is a meta file named ${distrelease},
	# we'll spin that instead of a bare distrelease
	require 2
	name=${1}
	distrelease=${2}

	if [ -e ${META_DIR}/"${distrelease}" ]; then
	    source ${META_DIR}/"${distrelease}"
	    log "Spinning meta instance \"${distrelease}\""

	    distrelease=${DISTRELEASE-ubunut-natty}
	fi

	log "Spinning instance named \"${name}\" as ${distrelease}"
	spin_instance ${name} ${FLAVOR-tiny} ${distrelease}
	;;
    destroy)
	require 1
	name=${1}
	log "Destroying instance named \"${name}\""
	destroy_instance_by_name $name
	;;
    reboot)
	require 1
	name=${1}

	log "Stopping instance \"${name}\""
	virsh destroy ${name}
	sleep 2
	log "Starting instance \"${name}\""
	virsh start ${name}
	log "Done."
	;;
    list)
	require 0
	log "Defined instances:"
	instances=$(ls ${BASE_DIR}/instances | sort)
	virsh_status=$(virsh list --all)
	count=0
	for instance in ${instances}; do
	    count=$(( count + 1 ))
	    output="  ${instance}: "
	    if $(echo "${virsh_status}" | grep -q "${instance}"); then
		output+="DEFINED "
		if $(echo "${virsh_status}" | grep -q "powered off"); then
		    output+="OFF "
		else
		    output+="ON "
		fi
	    else
		output+="UNDEFINED"
	    fi
	    log "${output}"
	done

	if [ $count -eq 0 ]; then
	    log "  (NONE)"
	fi
	;;

    *)
	log "Unknown command: ${action}"
	usage
	;;
esac

deinit
